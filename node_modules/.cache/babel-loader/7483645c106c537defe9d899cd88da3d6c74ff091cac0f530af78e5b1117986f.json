{"ast":null,"code":"// import { createSlice } from '@reduxjs/toolkit'\n// import {v4 as uuidv4} from 'uuid'\n\n// const initialBooks = {\n//     books: [\n//         {id: uuidv4(), title: 'A brief history of time', author: 'Stephen Hawking'},\n//         {id: uuidv4(), title: 'The alchemist', author: 'Paulo Coelho'}\n//     ]\n// }\n\n// export const booksSlice = createSlice({\n//     name: 'books',\n//     initialState: initialBooks,\n//     reducers: {\n//         showBooks: (state) => state,\n//         addBook: (state, action) => {\n//             state.books.push(action.payload)\n//         },\n//         updateBook: (state, action) =>{\n//             const {id, title, author} = action.payload\n//             const isBookExixt = state.books.filter((book)=> book.id === id)\n//             if(isBookExixt){\n//                 isBookExixt[0].title = title;\n//                 isBookExixt[0].author = author;\n//             }\n//         },\n//         deleteBook: (state, action) =>{\n//             const id = action.payload;\n//             state.books = state.books.filter(book => book.id !== id)\n//         }\n//     }\n// })\n\n// export const {showBooks, addBook, deleteBook, updateBook} = booksSlice.actions\n\n// export default booksSlice.reducer","map":{"version":3,"names":[],"sources":["C:/Code/Websites/Redux CRUD/redux-crud/src/fetaures/books/BooksSlice.js"],"sourcesContent":["// import { createSlice } from '@reduxjs/toolkit'\r\n// import {v4 as uuidv4} from 'uuid'\r\n\r\n// const initialBooks = {\r\n//     books: [\r\n//         {id: uuidv4(), title: 'A brief history of time', author: 'Stephen Hawking'},\r\n//         {id: uuidv4(), title: 'The alchemist', author: 'Paulo Coelho'}\r\n//     ]\r\n// }\r\n\r\n// export const booksSlice = createSlice({\r\n//     name: 'books',\r\n//     initialState: initialBooks,\r\n//     reducers: {\r\n//         showBooks: (state) => state,\r\n//         addBook: (state, action) => {\r\n//             state.books.push(action.payload)\r\n//         },\r\n//         updateBook: (state, action) =>{\r\n//             const {id, title, author} = action.payload\r\n//             const isBookExixt = state.books.filter((book)=> book.id === id)\r\n//             if(isBookExixt){\r\n//                 isBookExixt[0].title = title;\r\n//                 isBookExixt[0].author = author;\r\n//             }\r\n//         },\r\n//         deleteBook: (state, action) =>{\r\n//             const id = action.payload;\r\n//             state.books = state.books.filter(book => book.id !== id)\r\n//         }\r\n//     }\r\n// })\r\n\r\n\r\n// export const {showBooks, addBook, deleteBook, updateBook} = booksSlice.actions\r\n\r\n// export default booksSlice.reducer\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}