{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\Websites\\\\Redux CRUD\\\\redux-crud\\\\src\\\\fetaures\\\\books\\\\EditBooks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { updateBook } from './BooksSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditBooks = () => {\n  _s();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [id, setId] = useState(location.state.id);\n  const [title, setTitle] = useState(location.state.title);\n  const [author, setAuthor] = useState(location.state.author);\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(updateBook({\n      id,\n      title,\n      author\n    }));\n    navigate('/', {\n      replace: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          name: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"author\",\n          children: \"Author: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"author\",\n          name: \"author\",\n          value: author,\n          onChange: e => setAuthor(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(EditBooks, \"NnnBgRWoM3VA7E8WFbkqibpwhbU=\", false, function () {\n  return [useLocation, useDispatch, useNavigate];\n});\n_c = EditBooks;\nexport default EditBooks;\nvar _c;\n$RefreshReg$(_c, \"EditBooks\");","map":{"version":3,"names":["React","useState","useDispatch","useLocation","useNavigate","updateBook","jsxDEV","_jsxDEV","EditBooks","_s","location","dispatch","navigate","id","setId","state","title","setTitle","author","setAuthor","handleSubmit","e","preventDefault","replace","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","htmlFor","type","name","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Code/Websites/Redux CRUD/redux-crud/src/fetaures/books/EditBooks.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { updateBook } from './BooksSlice'\r\n\r\nconst EditBooks = () => {\r\n  const location = useLocation()\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  const [id, setId] = useState(location.state.id)\r\n  const [title, setTitle] = useState(location.state.title)\r\n  const [author, setAuthor] = useState(location.state.author)\r\n\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault()\r\n    dispatch(updateBook({id, title, author}))\r\n    navigate('/', {replace: true})\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Edit Books</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className='form-field'>\r\n              <label htmlFor='title'>Title: </label>\r\n              <input \r\n                type='text' \r\n                id='title' \r\n                name='title' \r\n                value={title} \r\n                onChange={(e)=> setTitle(e.target.value) }\r\n                required\r\n              />\r\n          </div>\r\n          <div className='form-field'>\r\n              <label htmlFor='author'>Author: </label>\r\n              <input \r\n                type='text' \r\n                id='author' \r\n                name='author' \r\n                value={author} \r\n                onChange={(e)=> setAuthor(e.target.value) }\r\n                required\r\n              />\r\n          </div>\r\n          <button type='submit'>Update Book</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditBooks"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,UAAU,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAMQ,QAAQ,GAAGT,WAAW,EAAE;EAC9B,MAAMU,QAAQ,GAAGR,WAAW,EAAE;EAE9B,MAAM,CAACS,EAAE,EAAEC,KAAK,CAAC,GAAGb,QAAQ,CAACS,QAAQ,CAACK,KAAK,CAACF,EAAE,CAAC;EAC/C,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAACS,QAAQ,CAACK,KAAK,CAACC,KAAK,CAAC;EACxD,MAAM,CAACE,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAACS,QAAQ,CAACK,KAAK,CAACG,MAAM,CAAC;EAE3D,MAAME,YAAY,GAAIC,CAAC,IAAI;IACzBA,CAAC,CAACC,cAAc,EAAE;IAClBX,QAAQ,CAACN,UAAU,CAAC;MAACQ,EAAE;MAAEG,KAAK;MAAEE;IAAM,CAAC,CAAC,CAAC;IACzCN,QAAQ,CAAC,GAAG,EAAE;MAACW,OAAO,EAAE;IAAI,CAAC,CAAC;EAChC,CAAC;EAED,oBACEhB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACnBrB,OAAA;MAAMsB,QAAQ,EAAET,YAAa;MAAAI,QAAA,gBAC3BjB,OAAA;QAAKuB,SAAS,EAAC,YAAY;QAAAN,QAAA,gBACrBjB,OAAA;UAAOwB,OAAO,EAAC,OAAO;UAAAP,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eACtCrB,OAAA;UACEyB,IAAI,EAAC,MAAM;UACXnB,EAAE,EAAC,OAAO;UACVoB,IAAI,EAAC,OAAO;UACZC,KAAK,EAAElB,KAAM;UACbmB,QAAQ,EAAGd,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACe,MAAM,CAACF,KAAK,CAAG;UAC1CG,QAAQ;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACA,eACNrB,OAAA;QAAKuB,SAAS,EAAC,YAAY;QAAAN,QAAA,gBACvBjB,OAAA;UAAOwB,OAAO,EAAC,QAAQ;UAAAP,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eACxCrB,OAAA;UACEyB,IAAI,EAAC,MAAM;UACXnB,EAAE,EAAC,QAAQ;UACXoB,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAEhB,MAAO;UACdiB,QAAQ,EAAGd,CAAC,IAAIF,SAAS,CAACE,CAAC,CAACe,MAAM,CAACF,KAAK,CAAG;UAC3CG,QAAQ;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACA,eACNrB,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV,CAAC;AAAAnB,EAAA,CA7CKD,SAAS;EAAA,QACIL,WAAW,EACXD,WAAW,EACXE,WAAW;AAAA;AAAAkC,EAAA,GAHxB9B,SAAS;AA+Cf,eAAeA,SAAS;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}